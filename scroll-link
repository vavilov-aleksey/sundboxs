document.getElementsByTagName('button')[0].onclick = function () {
   scrollTo(document.body, 0, 1250);   
}
    
function scrollTo(element, to, duration) {
    var start = element.scrollTop,
        change = to - start,
        currentTime = 0,
        increment = 20;
        
    var animateScroll = function(){        
        currentTime += increment;
        var val = Math.easeInOutQuad(currentTime, start, change, duration);
        element.scrollTop = val;
        if(currentTime < duration) {
            setTimeout(animateScroll, increment);
        }
    };
    animateScroll();
}

//t = current time
//b = start value
//c = change in value
//d = duration
Math.easeInOutQuad = function (t, b, c, d) {
  t /= d/2;
	if (t < 1) return c/2*t*t + b;
	t--;
	return -c/2 * (t*(t-2) - 1) + b;
};

//Еще одно решение. Посмотреть какое лучше. Здесь переход идет на высоту всего экрана.
window.requestAnimFrame = (function(){
        return  window.requestAnimationFrame ||
          window.webkitRequestAnimationFrame ||
          window.mozRequestAnimationFrame    ||
          function( callback ){
            window.setTimeout(callback, 1000 / 60);
          };
      })();

// main function
      const scrollToY = (scrollTargetY = 0, speed = 2000, easing = 'easeOutSine') => {
        // scrollTargetY: the target scrollY property of the window
        // speed: time in pixels per second
        // easing: easing equation to use

        let scrollY = window.scrollY,
          currentTime = 0;

        // min time .1, max time .8 seconds
        let time = Math.max(.1, Math.min(Math.abs(scrollY - scrollTargetY) / speed, .8));

        // easing equations from https://github.com/danro/easing-js/blob/master/easing.js
        let PI_D2 = Math.PI / 2,
          easingEquations = {
            easeOutSine: function (pos) {
              return Math.sin(pos * (Math.PI / 2));
            },
            easeInOutSine: function (pos) {
              return (-0.5 * (Math.cos(Math.PI * pos) - 1));
            },
            easeInOutQuint: function (pos) {
              if ((pos /= 0.5) < 1) {
                return 0.5 * Math.pow(pos, 5);
              }
              return 0.5 * (Math.pow((pos - 2), 5) + 2);
            }
          };

        // add animation loop
        const tick = () => {
          currentTime += 1 / 60;

          var p = currentTime / time;
          var t = easingEquations[easing](p);

          if (p < 1) {
            requestAnimFrame(tick);

            window.scrollTo(0, scrollY + ((scrollTargetY - scrollY) * t));
          } else {
            window.scrollTo(0, scrollTargetY);
          }
        }

        // call it once to get started
        tick();
      };

// scroll it!

      const contentTop = window.innerHeight;

      arrow.addEventListener('click', () => {

        if(isIe) {
          window.scroll({ top: contentTop, left: 0, behavior: 'smooth' })
        } else {
          scrollToY(contentTop, 700, 'easeInOutQuint');
        }
      });
