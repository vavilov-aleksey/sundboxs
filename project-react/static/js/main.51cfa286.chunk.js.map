{"version":3,"sources":["images/consumable.svg","images/armor.svg","images/weapon.svg","images/icon-artifact.svg","images/creep.svg","images/spell.svg","images/hero.svg","images/improvement.svg","images/health.svg","images/warning-icon.svg","images/check-icon.svg","images/item.svg","component/header/header.js","redux/Action/selectedCards.js","constants.js","component/sort-header/sort-header-cell.js","redux/Action/filter.js","data/defaultData.js","component/sort-header/sort-header.js","redux/Action/search.js","component/sort-footer/sort-footer.js","component/sort-preview/sort-preview-card.js","component/sort-preview/sort-preview-info.js","redux/Action/fullDeck.js","component/sort-preview/sort-preview.js","component/sort-cards/card.js","redux/Action/activeCard.js","redux/Action/popupError.js","component/sort-cards/sort-cards.js","component/sort-deck/sort-deck-hero.js","component/sort-deck/sort-deck-heroes.js","component/sort-deck/sort-deck-card.js","component/sort-deck/sort-deck-cards.js","component/sort-deck/sort-statistics-color.js","component/sort-deck/sort-statistics-item.js","component/sort-deck/sort-deck-statistic.js","component/sort-deck/sort-deck.js","artifact_api/index.js","component/preloader/preloader.js","component/popup-error/popup-error.js","App.js","redux/Action/preloader.js","redux/Action/data.js","serviceWorker.js","redux/Reducers/data.js","redux/Reducers/preloader.js","redux/Reducers/filter.js","redux/Reducers/activeCard.js","redux/Reducers/selectedCards.js","redux/Reducers/search.js","redux/Reducers/popupError.js","redux/Reducers/fullDeck.js","redux/Reducers/index.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Fragment","Component","selectedCardsClear","type","HeaderCell","checkSelected","_this","props","filter","data","typeFilter","this","style","fill","bgc","className","filters","activeFilter","title","name","key","onClick","bind","img","src","alt","react_svg","icon","svgStyle","connect","state","typeCard","dataType","typeName","typeSort","dataRarity","dataColor","dataBasket","SortHeaderGroup","map","cell","index","sort_header_cell","SortHeader","changeSearch","event","search","target","value","placeholder","onChange","sort_header_SortHeaderGroup","SortFooter","handleSubmit","preventDefault","desc","dataAlert","nameDeck","descriptionDeck","selectedCards","console","log","_this2","fullDeck","onSubmit","ref","input","required","disabled","SortPreviewCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","navClickSelected","setState","navSelected","getAttribute","arrCards","cards","cardActive","activeCard","returnImg","cardAct","card","card_id","img1","large_image","russian","img2","includes","references","ref_type","length","data-name","card_list","SortPreviewInfo","hero","item","card_type","toLowerCase","count","arrRef","arrCount","forEach","concat","toConsumableArray","countSum","otherCard","reduce","acc","cur","countCards","valid","titleInfo","info","iconS","iconW","cost","bool","SortPreview","sort_preview_card","sort_preview_info","Card","isErrorPopup","text","popupError","setTimeout","doubleCheckSelected","isSelected","selectedCard","some","counter","o","i","hasOwnProperty","keys","id","Number","getHero","_this$props","cardSelected","creep","spell","improvement","sub_type","accessory","armor","consumable","weapon","onDoubleClick","mini_image","default","is_red","is_black","is_blue","is_green","gold_cost","card_name","SortCards","arrInit","rarity","sort_cards_card","Hero","ingame_image","Heroes","selectedHero","heroes","sort_deck_hero_Hero","init","dopCount","returnRefer","manaCost","idCardRefer","mana_cost","countDopCard","Cards","result","arr","it","Set","values","Array","from","removeDuplicates","sort_deck_card","StatisticsColor","limits","sumColor","arrCardsSelected","isRed","filterFn","isBlue","isGreen","isBlack","flexBasis","StatisticsItem","limits1","limits2","sums","sum","limit","weaponCount","armorCount","accessoryCount","consumableCount","weaponLimit3","weaponLimit7","weaponLimit11","weaponLimit19","armorLimit3","armorLimit7","armorLimit11","armorLimit19","accessoryLimit3","accessoryLimit7","accessoryLimit11","accessoryLimit19","consumableLimit3","consumableLimit7","consumableLimit11","consumableLimit19","Statistics","sort_statistics_color","sort_statistics_item","SortDeck","sort_deck_heroes","sort_deck_cards","sort_deck_statistic_Statistics","api","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","abrupt","sent","t0","error","stop","apply","arguments","Preloader","PopupError","popup","App","then","response","card_set","preloader","preloaderBool","preloader_Preloader","popup_error_popup_error","header_Header","sort_header_sort_header","sort_preview_SortPreview","sort_cards_sort_cards","sort_deck_SortDeck","sort_footer_sort_footer","Boolean","window","location","hostname","match","undefined","objectSpread","selectCard","BASE_FILTER","combineReducers","store","initialState","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","enhancer","applyMiddleware","thunk","createStore","rootReducer","configureStore","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51cfa286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/consumable.4358784e.svg\";","module.exports = __webpack_public_path__ + \"static/media/armor.b6463ab9.svg\";","module.exports = __webpack_public_path__ + \"static/media/weapon.c9cc7951.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-artifact.9dd20e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/creep.99cc4482.svg\";","module.exports = __webpack_public_path__ + \"static/media/spell.fe91e75a.svg\";","module.exports = __webpack_public_path__ + \"static/media/hero.68b5fd4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/improvement.c6cb4014.svg\";","module.exports = __webpack_public_path__ + \"static/media/health.f7a6d44b.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning-icon.0e16ecc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/check-icon.34de4ebf.svg\";","module.exports = __webpack_public_path__ + \"static/media/item.f7a6d44b.svg\";","import React, { Component } from 'react';\r\nimport './header.css'\r\n\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n        <React.Fragment>\r\n            <header>\r\n                Колоды ARTIFACT\r\n            </header>\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import {SELECTED_CARD, SELECTED_CARD_CLEAR} from '../../constants';\r\n\r\nexport const selectedCards = (card) => ({\r\n  type: SELECTED_CARD,\r\n  card\r\n});\r\n\r\nexport const selectedCardsClear = () => ({\r\n  type: SELECTED_CARD_CLEAR\r\n});\r\n","export const INIT_DATA =           'INIT_DATA';\r\nexport const PRELOADER =           'PRELOADER';\r\nexport const FILTER =              'FILTER';\r\nexport const ACTIVE_CARD =         'ACTIVE_CARD';\r\nexport const SELECTED_CARD =       'SELECTED_CARD';\r\nexport const SELECTED_CARD_CLEAR = 'SELECTED_CARD_CLEAR';\r\nexport const SEARCH =              'SEARCH';\r\nexport const POPUP_ERROR =         'POPUP_ERROR';\r\nexport const FULL_DECK =           'FULL_DECK';\r\n","import React, { Component } from 'react';\r\nimport icon from \"../../images/icon-artifact.svg\";\r\nimport ReactSVG from 'react-svg'\r\nimport {connect} from \"react-redux\";\r\nimport {filter} from \"../../redux/Action/filter\";\r\nimport {selectedCardsClear} from \"../../redux/Action/selectedCards\";\r\n\r\n\r\nclass HeaderCell extends Component {\r\n\r\n  checkSelected = () => {\r\n    this.props.filter(this.props.type, this.props.data.typeFilter);\r\n    if(this.props.type === 'clear'){\r\n      this.props.selectedCardsClear();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const data = this.props;\r\n    let style = {\r\n      fill: data.data.bgc\r\n    };\r\n\r\n\r\n    return (\r\n      <div className={this.props.filters.activeFilter === data.data.typeFilter ? 'active sort-header__cell' : 'sort-header__cell'}\r\n           title={data.data.name}\r\n           key={data.data.name}\r\n           onClick={this.checkSelected.bind(this, data)}\r\n      >\r\n        {\r\n          data.data.img ?\r\n            <img src={'./images/' + data.data.img} alt=\"\"/>\r\n            :\r\n            <ReactSVG src={icon} svgStyle={style}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  filters: state.filter\r\n}), {filter,selectedCardsClear})(HeaderCell)","import {FILTER} from '../../constants';\r\n\r\nexport const filter = (typeCard, activeFilter) => ({\r\n  type: FILTER,\r\n  typeCard: typeCard,\r\n  activeFilter: activeFilter\r\n});\r\n\r\n","export const dataType = {\r\n  type: 'type',\r\n  typeName: 'Тип',\r\n  typeSort: [\r\n    {typeFilter: 'Hero', name: 'Герои', img: 'heroes.png'},\r\n    {typeFilter: 'Spell', name: 'Заклинание', img: 'spells.png'},\r\n    {typeFilter: 'Creep', name: 'Крип', img: 'creeps.png'},\r\n    {typeFilter: 'Item', name: 'Предмет', img: 'items.png'},\r\n    {typeFilter: 'Improvement', name: 'Улучшение', img: 'improvements.png'}\r\n  ]\r\n};\r\n\r\nexport const dataRarity = {\r\n  type: 'rarity',\r\n  typeName: 'Редкость',\r\n  typeSort: [\r\n    {typeFilter: 'Base', name: 'Базовая', bgc: '#a6a6a6'},\r\n    {typeFilter: 'Common', name: 'Обычная', bgc: '#644c41'},\r\n    {typeFilter: 'Uncommon', name: 'Необычная', bgc: '#5e5e5e'},\r\n    {typeFilter: 'Rare', name: 'Редкая', bgc: '#978861'},\r\n  ]\r\n};\r\n\r\nexport const dataColor = {\r\n  type: 'color',\r\n  typeName: 'Цвет',\r\n  typeSort: [\r\n    {typeFilter: 'Red', name: 'Красный', bgc: '#6f2224'},\r\n    {typeFilter: 'Blue', name: 'Синий', bgc: '#21496e'},\r\n    {typeFilter: 'Green', name: 'Зеленый', bgc: '#3b7022'},\r\n    {typeFilter: 'Black', name: 'Черный', bgc: '#403c42'},\r\n  ]\r\n};\r\n\r\nexport const dataBasket = {\r\n  type: 'clear',\r\n  typeSort: [\r\n    {typeFilter: '', name: 'Очистить колоду', img: 'basket.svg'}\r\n  ]\r\n};","import React, {Component} from 'react';\r\nimport './sort-header.css'\r\nimport HeaderCell from \"./sort-header-cell\";\r\nimport {dataBasket, dataColor, dataRarity, dataType} from '../../data/defaultData'\r\nimport {connect} from \"react-redux\";\r\nimport {search} from \"../../redux/Action/search\";\r\n\r\nclass SortHeaderGroup extends Component {\r\n\r\n  render() {\r\n    const data = this.props;\r\n    return (\r\n      <div className='sort-header__group'>\r\n        <div className=\"sort-header__group-title\">\r\n          {data.data.typeName}\r\n        </div>\r\n        <div className=\"sort-header__group-cell\">\r\n          {data.data.typeSort.map((cell, index) => {\r\n\r\n            return (\r\n              <HeaderCell data={cell} key={index} type={data.data.type}/>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass SortHeader extends Component {\r\n  changeSearch = (event) =>{\r\n    this.props.search(event.target.value)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sort-header\">\r\n        <input type=\"search\" placeholder='Поиск' onChange={this.changeSearch}/>\r\n\r\n        <SortHeaderGroup data={dataType}/>\r\n        <SortHeaderGroup data={dataRarity}/>\r\n        <SortHeaderGroup data={dataColor}/>\r\n        <SortHeaderGroup data={dataBasket}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state=>({}), {search})(SortHeader)","import {SEARCH} from '../../constants';\r\n\r\nexport const search = (value) => ({\r\n  type: SEARCH,\r\n  value\r\n});","import React, {Component} from 'react';\r\nimport './sort-footer.css'\r\nimport {connect} from \"react-redux\";\r\nimport {selectedCardsClear} from \"../../redux/Action/selectedCards\";\r\n\r\nclass SortFooter extends Component {\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const desc = this.desc.value;\r\n    const name = this.name.value;\r\n\r\n    const dataAlert = {\r\n      'nameDeck': name,\r\n      'descriptionDeck' : desc,\r\n      'selectedCards': this.props.selectedCards\r\n    };\r\n\r\n    console.log(dataAlert);\r\n\r\n    this.desc.value = '';\r\n    this.name.value = '';\r\n    this.props.selectedCardsClear();\r\n  };\r\n\r\n  render() {\r\n    const fullDeck = this.props.fullDeck;\r\n\r\n    return (\r\n      <form className=\"sort-footer\" onSubmit={this.handleSubmit}>\r\n        <textarea placeholder='Описание колоды'\r\n                  ref={(input) => this.desc = input}\r\n        />\r\n        <input type=\"text\"\r\n               placeholder='Название колоды'\r\n               required ref={(input) => this.name = input}\r\n        />\r\n        <input type=\"submit\" value='Сохранить' disabled={!fullDeck}/>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  fullDeck: state.fullDeck,\r\n  selectedCards: state.selectedCards\r\n}), {selectedCardsClear})(SortFooter);\r\n","import React, {Component} from 'react';\r\nimport './sort-preview.css'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass SortPreviewCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      navSelected: 'primary'\r\n    }\r\n  }\r\n\r\n  navClickSelected = event => {\r\n    this.setState({navSelected: event.target.getAttribute('data-name')})\r\n  };\r\n\r\n\r\n  render() {\r\n    const navSelected = this.state.navSelected;\r\n    const arrCards = this.props.cards;\r\n    const cardActive = this.props.activeCard;\r\n\r\n\r\n    const returnImg = (cards, cardActive) => {\r\n      const cardAct = cardActive ? cards.filter(card => card.card_id === cardActive)[0] : cards[0];\r\n      const img1 = cardAct.large_image.russian;\r\n      let img2 = '';\r\n      const includes = cardAct.references.filter(card => card.ref_type === 'includes');\r\n      if (includes.length !== 0) {\r\n        let arrFilter = cards.filter(card => card.card_id === includes[0].card_id);\r\n        img2 = arrFilter[0].large_image.russian;\r\n      }\r\n      return {img1, img2};\r\n    };\r\n\r\n    const img1 = returnImg(arrCards, cardActive).img1;\r\n    const img2 = returnImg(arrCards, cardActive).img2;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className={!img2 ? 'primary' : navSelected === 'primary' ? 'primary' : 'secondary'}>\r\n          <img src={img1}\r\n               alt=\"\"\r\n               data-name=\"primary\"\r\n               onClick={this.navClickSelected}/>\r\n        </div>\r\n        {img2 ?\r\n          <div className={navSelected === 'primary' ? 'secondary' : 'primary'}>\r\n            <img src={img2}\r\n                 alt=\"\" data-name='secondary'\r\n                 onClick={this.navClickSelected}/>\r\n          </div>\r\n          : ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  cards: state.data.card_list,\r\n  activeCard: state.activeCard\r\n}))(SortPreviewCard);","import React, {Component} from 'react';\r\nimport './sort-preview.css'\r\nimport {connect} from \"react-redux\";\r\nimport iconW from '../../images/warning-icon.svg';\r\nimport iconS from '../../images/check-icon.svg';\r\nimport ReactSVG from 'react-svg';\r\nimport {fullDeck} from \"../../redux/Action/fullDeck\";\r\n\r\n\r\nclass SortPreviewInfo extends Component {\r\n\r\n  render() {\r\n    const selectedCards = this.props.selectedCards;\r\n\r\n    // Search hero\r\n    let hero = [], item = [];\r\n    if (selectedCards.length > 0) {\r\n      hero = selectedCards.filter(card => card.card_type.toLowerCase() === 'hero');\r\n      item = selectedCards.filter(card => card.card_type.toLowerCase() === 'item');\r\n    }\r\n\r\n    const countCards = (arrCards) => {\r\n      const arrRef =  arrCards.filter(card => card.references.length > 0 );\r\n      let arrCount = [];\r\n      arrRef.forEach(cell => {\r\n        const includes = cell.references.filter(card => card.ref_type === 'includes');\r\n        if(includes.length > 0){\r\n          const count = includes[0].count;\r\n          arrCount = [...arrCount, count];\r\n        }\r\n      });\r\n\r\n      if(arrCards.length > 0){\r\n      }\r\n\r\n      let countSum = 0;\r\n      if(arrCount.length > 0){\r\n        const otherCard = arrCards.length - arrCount.length;\r\n        countSum = (arrCount.reduce((acc, cur) => acc + cur) + otherCard);\r\n      }\r\n\r\n      return countSum;\r\n    };\r\n\r\n    const count  = countCards(selectedCards);\r\n\r\n    const data = [\r\n      {\r\n        valid: hero.length === 5,\r\n        title: 'Герои',\r\n        titleInfo: `${hero.length}/5`,\r\n        info: 'В колоде должно быть ровно 5 героев'\r\n      },\r\n      {valid: count >= 40, title: 'Основные карты', titleInfo: `${count}/40${count >= 40 ? '+' : ''}`, info: 'В колоде должно быть минимум 40 карт'},\r\n      {valid: item.length >= 9, title: 'Предметы', titleInfo: `${item.length}/9${item.length >= 9 ? '+' : ''}`, info: 'В колоде должно быть минмимум 9 предметов'},\r\n    ];\r\n\r\n    if(count >= 40 && item.length >= 9 && hero.length === 5){\r\n      this.props.fullDeck(true);\r\n    }\r\n\r\n    return (\r\n      <div className=\"info\">\r\n        {\r\n          data.map(cell => {\r\n            return (\r\n              <div className=\"block\" key={cell.title}>\r\n                <div className=\"title\">\r\n                  {cell.title}\r\n                  {cell.titleInfo ? <><span>{cell.titleInfo}</span>{cell.valid ? <ReactSVG src={iconS} /> : <ReactSVG src={iconW}/>}</>  : ''}\r\n                  {cell.cost ? <span>$ {cell.cost}</span> : ''}\r\n                </div>\r\n                {cell.info && !cell.valid ?\r\n                  <div className=\"desc\">\r\n                    {cell.info}\r\n                  </div>\r\n                  : ''\r\n                }\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  selectedCards: state.selectedCards\r\n}), {fullDeck})(SortPreviewInfo)","import {FULL_DECK} from '../../constants';\r\n\r\nexport const fullDeck = (bool) => ({\r\n  type: FULL_DECK,\r\n  bool\r\n});\r\n\r\n","import React, {Component} from 'react';\r\nimport './sort-preview.css'\r\nimport SortPreviewCard from \"./sort-preview-card\";\r\nimport SortPreviewInfo from \"./sort-preview-info\";\r\n\r\nexport default class SortPreview extends Component {\r\n    render() {\r\n        return (\r\n            <div className='sort-preview'>\r\n                <SortPreviewCard/>\r\n                <SortPreviewInfo/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {activeCard} from \"../../redux/Action/activeCard\";\r\nimport {selectedCards} from \"../../redux/Action/selectedCards\";\r\nimport {popupError} from \"../../redux/Action/popupError\";\r\nimport ReactSVG from 'react-svg';\r\nimport armor from '../../images/armor.svg';\r\nimport creep from '../../images/creep.svg';\r\nimport spell from '../../images/spell.svg';\r\nimport hero from '../../images/hero.svg';\r\nimport improvement from '../../images/improvement.svg';\r\nimport accessory from '../../images/health.svg';\r\nimport weapon from '../../images/weapon.svg';\r\nimport consumable from '../../images/consumable.svg';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 3,\r\n      isSelected: false\r\n    };\r\n  }\r\n\r\n  isErrorPopup = (text) => {\r\n    this.props.popupError(text);\r\n    setTimeout(() => {\r\n      this.props.popupError(false)\r\n    }, 3500);\r\n  };\r\n\r\n  checkSelected = () => {\r\n    this.props.activeCard(this.props.cell.card_id);\r\n  };\r\n\r\n  doubleCheckSelected = () => {\r\n    if(this.state.count > 0) this.setState({count: this.state.count - 1});\r\n    if(this.props.cell.card_type === 'Hero') this.setState({isSelected: true});\r\n\r\n    let hero = [], count = 0;\r\n    const arrCards = this.props.selectedCard;\r\n    if (arrCards.length > 0) {\r\n      hero = arrCards.filter(card => card.card_type.toLowerCase() === 'hero')\r\n    }\r\n\r\n    if (hero.some(card => card.card_id === this.props.cell.card_id)) {\r\n      this.isErrorPopup('В колоде уже есть этот герой');\r\n      return;\r\n    }\r\n\r\n    const counter = arrCards.reduce((o, i) => {\r\n      if (!o.hasOwnProperty(i.card_id)) {\r\n        o[i.card_id] = 0;\r\n      }\r\n      o[i.card_id]++;\r\n      return o;\r\n    }, {});\r\n\r\n    const result = Object.keys(counter).map((id) => {\r\n      return {id: Number(id), count: counter[id]};\r\n    });\r\n\r\n    result.forEach(arrCount => {\r\n      if (arrCount.id === this.props.cell.card_id) {\r\n        count = arrCount.count;\r\n        if(count >= 2) this.setState({isSelected: true})\r\n      }\r\n    });\r\n\r\n\r\n    if (hero.length === 5) {\r\n      const getHero = this.props.cell.card_type.toLowerCase();\r\n      if (getHero !== 'hero') {\r\n        if (count >= 3) {\r\n          this.isErrorPopup('В колоде не может быть больше трех копий одной карты');\r\n          return;\r\n        }\r\n        this.props.selectedCards(this.props.cell)\r\n      }\r\n      if (getHero === 'hero') {\r\n        this.isErrorPopup('В колоде не может быть больше 5 героев');\r\n      }\r\n    } else {\r\n      if (count >= 3) {\r\n        this.isErrorPopup('В колоде не может быть больше трех копий одной карты');\r\n        return;\r\n      }\r\n      this.props.selectedCards(this.props.cell)\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const {cell, cardSelected} = this.props;\r\n    const count = this.state.count;\r\n\r\n    let icon;\r\n    icon = cell.card_type === 'Creep' ? creep :\r\n           cell.card_type === 'Spell' ? spell :\r\n           cell.card_type === 'Improvement' ? improvement :\r\n           cell.card_type === 'Hero' ? hero :\r\n           (cell.card_type === 'Item' && cell.sub_type === 'Accessory') ? accessory :\r\n           (cell.card_type === 'Item' && cell.sub_type === 'Armor') ? armor :\r\n           (cell.card_type === 'Item' && cell.sub_type === 'Consumable') ? consumable :\r\n           (cell.card_type === 'Item' && cell.sub_type === 'Weapon') ? weapon : consumable;\r\n\r\n\r\n\r\n    return (\r\n      <div className={`card ${this.state.isSelected ? 'selected' : ''} ${cell.card_id === cardSelected ? 'active' : ''}`}\r\n           onClick={this.checkSelected.bind(this, cell.card_id)}\r\n           onDoubleClick={this.doubleCheckSelected.bind(this, cell)}\r\n      >\r\n        <img src={cell.mini_image.default} alt=\"\"/>\r\n        <div\r\n          className={\r\n            (cell.is_red ? 'red' :\r\n              cell.is_black ? 'black' :\r\n                cell.is_blue ? 'blue' :\r\n                cell.is_green ? 'green' :\r\n                  'gold') + \" card-desc\"}>\r\n          <ReactSVG src={icon}/>\r\n          {cell.gold_cost ? <small>{cell.gold_cost}</small> : ''}\r\n          <span>{cell.card_name.russian}</span>\r\n          {(cell.card_type.toLowerCase() !== 'hero') && this.state.count ? <small>x{count}</small> : ''}\r\n        </div>\r\n        <div className=\"overlay\">&nbsp;</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(state => ({\r\n\r\n  selectedCard: state.selectedCards\r\n}), {activeCard, selectedCards, popupError})(Card);","import {ACTIVE_CARD} from '../../constants';\r\n\r\nexport const activeCard = (activeCard) => ({\r\n  type: ACTIVE_CARD,\r\n  activeCard\r\n});\r\n\r\n","import {POPUP_ERROR} from \"../../constants\";\r\n\r\nexport const popupError = (text) => ({\r\n  type: POPUP_ERROR,\r\n  text\r\n});\r\n","import React, {Component} from 'react';\r\nimport './sort-cards.css';\r\nimport {connect} from \"react-redux\";\r\nimport Card from \"./card\";\r\n\r\n\r\nclass SortCards extends Component {\r\n\r\n  render() {\r\n    const {data, filter, search} = this.props;\r\n\r\n    const filterInit = (item) => {\r\n      return (item.card_type !== 'Passive Ability') && (item.card_type !== 'Ability');\r\n    };\r\n\r\n    let arrInit = data.card_list.filter(filterInit);\r\n    if (filter.type === 'type') arrInit = arrInit.filter(item => item.card_type === filter.activeFilter);\r\n    if (filter.type === 'rarity' && filter.activeFilter !== 'Base') arrInit = arrInit.filter(item => item.rarity === filter.activeFilter);\r\n    if (filter.type === 'color') arrInit = arrInit.filter(item => (\r\n      filter.activeFilter === 'Red' ? item.is_red === true :\r\n        filter.activeFilter === 'Blue' ? item.is_blue === true :\r\n          filter.activeFilter === 'Green' ? item.is_green === true :\r\n            item.is_black === true\r\n\r\n    ));\r\n    if(search) arrInit = arrInit.filter(item => item.card_name.russian.toLowerCase().includes(search.toLowerCase()));\r\n    return (\r\n      <div className='sort-cards'>\r\n        {arrInit.map((cell, index) => {\r\n          return (\r\n            <Card cell={cell} index={index} key={index}/>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => (\r\n  {\r\n    data: state.data,\r\n    filter: state.filter,\r\n    search: state.search\r\n  }), {})(SortCards);\r\n","import React, {Component} from 'react';\r\nimport './sort-deck.css'\r\n\r\nexport default class Hero extends Component {\r\n  render() {\r\n    const data = this.props;\r\n\r\n    return (\r\n      <div className={\r\n        (data.data.is_red ? 'red' :\r\n          data.data.is_black ? 'black' :\r\n            data.data.is_blue ? 'blue' :\r\n              data.data.is_green ? 'green' : '') + ' deck__hero'}>\r\n        {data.data.ingame_image ?\r\n          <img src={data.data.ingame_image.default} alt=''/>\r\n          : ''\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport Hero from \"./sort-deck-hero\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Heroes extends Component {\r\n  render() {\r\n    const selectedCards = this.props.heroes;\r\n    const selectedHero = selectedCards.filter(card => card.card_type.toLowerCase() === 'hero');\r\n\r\n    return (\r\n      <div className='deck__heroes'>\r\n        <Hero data={selectedHero[0] ? selectedHero[0] : ''}/>\r\n        <Hero data={selectedHero[1] ? selectedHero[1] : ''}/>\r\n        <Hero data={selectedHero[2] ? selectedHero[2] : ''}/>\r\n        <Hero data={selectedHero[3] ? selectedHero[3] : ''}/>\r\n        <Hero data={selectedHero[4] ? selectedHero[4] : ''}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  heroes: state.selectedCards\r\n}))(Heroes)\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ReactSVG from 'react-svg';\r\nimport creep from \"../../images/creep.svg\";\r\nimport spell from \"../../images/spell.svg\";\r\nimport improvement from \"../../images/improvement.svg\";\r\nimport hero from \"../../images/hero.svg\";\r\nimport accessory from \"../../images/health.svg\";\r\nimport armor from \"../../images/armor.svg\";\r\nimport consumable from \"../../images/consumable.svg\";\r\nimport weapon from \"../../images/weapon.svg\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const data = this.props;\r\n    const arrCards = this.props.init;\r\n    const dopCount = this.props.dopCount;\r\n\r\n\r\n    const returnRefer = (cardActive, arrCards) => {\r\n      const includes = cardActive.references.filter(card => card.ref_type === 'includes');\r\n      let count, name, manaCost, type;\r\n      if (includes.length !== 0) {\r\n        count = includes[0].count;\r\n        let idCardRefer = includes[0].card_id;\r\n        const card = arrCards.filter(card => card.card_id === idCardRefer);\r\n        name = card[0].card_name.russian;\r\n        manaCost = card[0].mana_cost;\r\n        type = card[0].card_type;\r\n      } else {\r\n        name = cardActive.card_name.russian;\r\n        manaCost = cardActive.mana_cost;\r\n        type = cardActive.card_type;\r\n      }\r\n\r\n      return {count, name, manaCost, type};\r\n    };\r\n\r\n    const count = returnRefer(data.data, arrCards).count;\r\n    const name = returnRefer(data.data, arrCards).name;\r\n    const manaCost = returnRefer(data.data, arrCards).manaCost;\r\n    const countDopCard = count ? '' : dopCount[0].count;\r\n\r\n    let icon;\r\n    icon = returnRefer(data.data, arrCards).type === 'Creep' ? creep :\r\n            returnRefer(data.data, arrCards).type === 'Spell' ? spell :\r\n              returnRefer(data.data, arrCards).type === 'Improvement' ? improvement :\r\n                returnRefer(data.data, arrCards).type === 'Hero' ? hero :\r\n                  (data.data.card_type === 'Item' && data.data.sub_type === 'Accessory') ? accessory :\r\n                    (data.data.card_type === 'Item' && data.data.sub_type === 'Armor') ? armor :\r\n                      (data.data.card_type === 'Item' && data.data.sub_type === 'Consumable') ? consumable :\r\n                        (data.data.card_type === 'Item' && data.data.sub_type === 'Weapon') ? weapon : consumable;\r\n\r\n\r\n    return (\r\n      <div className='deck__card'>\r\n        <img src={data.data.mini_image.default} alt=\"\"/>\r\n        <div className={\r\n          (data.data.is_red ? 'red' :\r\n            data.data.is_black ? 'black' :\r\n              data.data.is_blue ? 'blue' :\r\n                data.data.is_green ? 'green' : 'gold') + ' deck__card-block'}>\r\n          <ReactSVG src={icon}/>\r\n          {data.data.gold_cost ? <small>{data.data.gold_cost}</small> : ''}\r\n          {manaCost ? <small>{manaCost}</small> : ''}\r\n          <span className='deck__card-title'>{name}</span>\r\n          {data.data.ingame_image.default ? <img src={data.data.ingame_image.default} alt=\"\"/> : ''}\r\n          {count ? <span>x{count}</span> : ''}\r\n          {countDopCard ? <span>x{countDopCard}</span> : ''}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(state => ({\r\n  init: state.data.card_list\r\n}))(Card)\r\n","import React, {Component} from 'react';\r\nimport Card from \"./sort-deck-card\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    let selectedCards = this.props.heroes;\r\n\r\n\r\n    const removeDuplicates = (arr) => {\r\n      let set = new Set(arr);\r\n      let it = set.values();\r\n      return Array.from(it);\r\n    };\r\n\r\n    const counter = selectedCards.reduce((o, i) => {\r\n      if (!o.hasOwnProperty(i.card_id)) {\r\n        o[i.card_id] = 0;\r\n      }\r\n      o[i.card_id]++;\r\n      return o;\r\n    }, {});\r\n    const result = Object.keys(counter).map((id) => {\r\n      return {id: Number(id), count: counter[id]};\r\n    });\r\n\r\n\r\n    selectedCards = removeDuplicates(selectedCards);\r\n\r\n\r\n    return (\r\n      <div className='deck__cards'>\r\n        {selectedCards.map((card, index) => {\r\n          const count = result.filter(id => {\r\n            if(card.card_id === id.id) {\r\n              return id.count\r\n            }\r\n          });\r\n          return (\r\n            <Card key={index} data={card} dopCount={count}/>\r\n          )\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  heroes: state.selectedCards\r\n}))(Cards)\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nclass StatisticsColor extends Component {\r\n  filterFn(arr, type, limits){\r\n    let sumColor;\r\n\r\n    switch (type) {\r\n      case 'is_red':\r\n        sumColor = arr.filter(card => card.is_red === true).length;\r\n        break;\r\n      case 'is_blue':\r\n        sumColor = arr.filter(card => card.is_blue === true).length;\r\n        break;\r\n      case 'is_green':\r\n        sumColor = arr.filter(card => card.is_green === true).length;\r\n        break;\r\n      case 'is_black':\r\n        sumColor = arr.filter(card => card.is_black === true).length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n    return {sumColor}\r\n  }\r\n\r\n\r\n  render() {\r\n    const arrCardsSelected = this.props.arrCardsSelected;\r\n\r\n\r\n\r\n\r\n    const isRed = this.filterFn(arrCardsSelected, 'is_red').sumColor;\r\n    const isBlue = this.filterFn(arrCardsSelected, 'is_blue').sumColor;\r\n    const isGreen = this.filterFn(arrCardsSelected, 'is_green').sumColor;\r\n    const isBlack = this.filterFn(arrCardsSelected, 'is_black').sumColor;\r\n\r\n\r\n\r\n\r\n    let style = {\r\n      'flexBasis': '25%'\r\n    };\r\n\r\n\r\n    return (\r\n      <div className='deck__statistics-color'>\r\n        <div className=\"title\">Распределение по цвету</div>\r\n        <div className=\"col\">\r\n          <div style={style} className='cell-red'>{isRed}</div>\r\n          <div style={style} className='cell-blue'>{isBlue}</div>\r\n          <div style={style} className='cell-green'>{isGreen}</div>\r\n          <div style={style} className='cell-black'>{isBlack}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  arrCardsSelected: state.selectedCards,\r\n  arrCards: state.data.card_list\r\n}))(StatisticsColor)","import React, {Component} from 'react';\r\nimport ReactSVG from 'react-svg';\r\nimport armor from '../../images/armor.svg';\r\nimport weapon from '../../images/weapon.svg';\r\nimport item from '../../images/item.svg';\r\nimport consumable from '../../images/consumable.svg';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass StatisticsItem extends Component {\r\n  filterFn(arr, type, limits1, limits2){\r\n    let sums = [], limits = [];\r\n    if(type === 'Consumable'){\r\n      sums = arr.filter(card => (card.sub_type === type) || (card.sub_type === 'Deed'));\r\n    } else {\r\n      sums = arr.filter(card => card.sub_type === type);\r\n    }\r\n\r\n    let sum = sums.length;\r\n    limits = sums.filter(card => (card.gold_cost >= limits1) && (limits2 ? (card.gold_cost <= limits2) : true));\r\n    let limit = limits.length === 0 ? '' : limits.length;\r\n    return {sum, limit}\r\n  }\r\n\r\n  render() {\r\n    const arrCards = this.props.arrCards;\r\n\r\n    // Sum\r\n    const weaponCount = this.filterFn(arrCards, 'Weapon').sum;\r\n    const armorCount = this.filterFn(arrCards, 'Armor').sum;\r\n    const accessoryCount = this.filterFn(arrCards, 'Accessory').sum;\r\n    const consumableCount = this.filterFn(arrCards, 'Consumable').sum;\r\n    // weaponLimit\r\n    const weaponLimit3 = this.filterFn(arrCards, 'Weapon', 3, 6).limit;\r\n    const weaponLimit7 = this.filterFn(arrCards, 'Weapon', 7, 10).limit;\r\n    const weaponLimit11 = this.filterFn(arrCards, 'Weapon', 11, 18).limit;\r\n    const weaponLimit19 = this.filterFn(arrCards, 'Weapon', 19).limit;\r\n    // armorLimit\r\n    const armorLimit3 = this.filterFn(arrCards, 'Armor', 3, 6).limit;\r\n    const armorLimit7 = this.filterFn(arrCards, 'Armor', 7, 10).limit;\r\n    const armorLimit11 = this.filterFn(arrCards, 'Armor', 11, 18).limit;\r\n    const armorLimit19 = this.filterFn(arrCards, 'Armor', 19).limit;\r\n    // accessoryLimit\r\n    const accessoryLimit3 = this.filterFn(arrCards, 'Accessory', 3, 6).limit;\r\n    const accessoryLimit7 = this.filterFn(arrCards, 'Accessory', 7, 10).limit;\r\n    const accessoryLimit11 = this.filterFn(arrCards, 'Accessory', 11, 18).limit;\r\n    const accessoryLimit19 = this.filterFn(arrCards, 'Accessory', 19).limit;\r\n    // consumableLimit\r\n    const consumableLimit3 = this.filterFn(arrCards, 'Consumable', 3, 6).limit;\r\n    const consumableLimit7 = this.filterFn(arrCards, 'Consumable', 7, 10).limit;\r\n    const consumableLimit11 = this.filterFn(arrCards, 'Consumable', 11, 18).limit;\r\n    const consumableLimit19 = this.filterFn(arrCards, 'Consumable', 19).limit;\r\n\r\n    return (\r\n      <div className='deck__statistics-item'>\r\n        <div className=\"title\">Предметы</div>\r\n        <div className=\"rows\">\r\n          <div className=\"row\">\r\n            <div className=\"icon\">\r\n              <ReactSVG src={weapon}/>\r\n              <span>{weaponCount}</span>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <ReactSVG src={armor}/>\r\n              <span>{armorCount}</span>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <ReactSVG src={item}/>\r\n              <span>{accessoryCount}</span>\r\n            </div>\r\n            <div className=\"icon\">\r\n              <ReactSVG src={consumable}/>\r\n              <span>{consumableCount}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">{weaponLimit3}</div>\r\n            <div className=\"col\">{armorLimit3}</div>\r\n            <div className=\"col\">{accessoryLimit3}</div>\r\n            <div className=\"col\">{consumableLimit3}</div>\r\n            <span>3-6</span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">{weaponLimit7}</div>\r\n            <div className=\"col\">{armorLimit7}</div>\r\n            <div className=\"col\">{accessoryLimit7}</div>\r\n            <div className=\"col\">{consumableLimit7}</div>\r\n            <span>7-10</span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">{weaponLimit11}</div>\r\n            <div className=\"col\">{armorLimit11}</div>\r\n            <div className=\"col\">{accessoryLimit11}</div>\r\n            <div className=\"col\">{consumableLimit11}</div>\r\n            <span>11-18</span>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">{weaponLimit19}</div>\r\n            <div className=\"col\">{armorLimit19}</div>\r\n            <div className=\"col\">{accessoryLimit19}</div>\r\n            <div className=\"col\">{consumableLimit19}</div>\r\n            <span>19+</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({\r\n  arrCards: state.selectedCards\r\n}))(StatisticsItem);\r\n","import React, {Component} from 'react';\r\nimport StatisticsColor from \"./sort-statistics-color\";\r\nimport StatisticsItem from \"./sort-statistics-item\";\r\n\r\nexport default class Statistics extends Component {\r\n  render() {\r\n    return (\r\n      <div className='deck__statistics'>\r\n        <StatisticsColor/>\r\n        <StatisticsItem/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport Heroes from \"./sort-deck-heroes\";\r\nimport Cards from \"./sort-deck-cards\";\r\nimport Statistics from \"./sort-deck-statistic\";\r\n\r\nexport default class SortDeck extends Component {\r\n  render() {\r\n    return (\r\n      <div className='deck'>\r\n        <Heroes/>\r\n        <Cards/>\r\n        <Statistics/>\r\n      </div>\r\n    );\r\n  }\r\n}","import axios from 'axios';\r\n\r\nexport const api = async () => {\r\n  try{\r\n    return await axios.get(`https://steamcdn-a.akamaihd.net/apps/583950/resource/card_set_1.134088E143B4C697AA334924195E1DFB24EC95C5.json`, {\r\n    });\r\n  } catch(error){\r\n    console.error(error)\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport icon from \"../../images/icon-artifact.svg\";\r\nimport ReactSVG from 'react-svg';\r\nimport './preloader.css'\r\n\r\nexport default class Preloader extends Component {\r\n  render() {\r\n    return (\r\n      <div className='preloader'>\r\n        <ReactSVG src={icon} />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './popup-error.css'\r\n\r\nclass PopupError extends Component {\r\n  render() {\r\n    const error = this.props.popup;\r\n    return (\r\n      <div className='popup-error'>\r\n        {error}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state=>({\r\n  popup: state.popupError\r\n}))(PopupError);\r\n","import React, {Component} from 'react';\nimport Header from \"./component/header/header\";\nimport SortHeader from \"./component/sort-header/sort-header\";\nimport SortFooter from \"./component/sort-footer/sort-footer\";\nimport SortPreview from \"./component/sort-preview/sort-preview\";\nimport SortCards from \"./component/sort-cards/sort-cards\";\nimport SortDeck from \"./component/sort-deck/sort-deck\";\nimport {connect} from \"react-redux\";\nimport {data} from './redux/Action/data';\nimport {preloader} from \"./redux/Action/preloader\";\nimport {api} from './artifact_api'\nimport Preloader from \"./component/preloader/preloader\";\nimport PopupError from \"./component/popup-error/popup-error\";\n\nclass App extends Component {\n  componentDidMount() {\n    api().then(response => {\n      return [this.props.data(response.data.card_set), this.props.preloader(false)];\n    });\n\n  }\n\n  render() {\n    const {preloaderBool, popup} = this.props;\n    return (\n      <React.Fragment>\n        {preloaderBool ? <Preloader/> :\n        <>\n          {popup ? <PopupError/> : ''}\n          <Header/>\n          <SortHeader/>\n          <div className=\"container\">\n            <SortPreview/>\n            <SortCards/>\n            <SortDeck/>\n          </div>\n          <SortFooter/>\n        </>\n        }\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default connect(state => ({\n  preloaderBool: state.preloader,\n  popup: state.popupError\n}),{preloader,data})(App);\n\n","import {PRELOADER} from \"../../constants\";\r\n\r\nexport const preloader = (bool) => ({\r\n  type: PRELOADER,\r\n  bool\r\n});\r\n","import {INIT_DATA} from \"../../constants\";\r\n\r\nexport const data = (data) => ({\r\n  type: INIT_DATA,\r\n  data\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {INIT_DATA} from \"../../constants\";\r\n\r\nconst data = (state={}, {data, type}) => {\r\n  switch(type) {\r\n    case INIT_DATA :\r\n      //Todo можно ли так делать в редьюсере\r\n      const cards = data.card_list.map(card => {\r\n        return(\r\n          {...card,\r\n            selectCard: false\r\n          }\r\n        )\r\n      });\r\n      return {\r\n        ...data,\r\n        card_list: cards\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default data;","import {PRELOADER} from \"../../constants\";\r\n\r\nconst preloader = (state = true, {bool, type}) => {\r\n  switch (type) {\r\n    case PRELOADER :\r\n      return bool;\r\n    default :\r\n      return state\r\n  }\r\n};\r\n\r\nexport default preloader;","import {FILTER} from \"../../constants\";\r\n\r\nconst BASE_FILTER = {\r\n  type: '',\r\n  activeFilter: false\r\n};\r\n\r\nconst filter = (state = BASE_FILTER, {typeCard, activeFilter, type}) => {\r\n  switch (type) {\r\n    case FILTER :\r\n      return {\r\n        type: typeCard,\r\n        activeFilter:activeFilter\r\n      };\r\n    default :\r\n      return state\r\n  }\r\n};\r\n\r\nexport default filter;","import {ACTIVE_CARD} from \"../../constants\";\r\n\r\n\r\nconst activeCard = (state = '', {activeCard, type}) => {\r\n  switch (type) {\r\n    case ACTIVE_CARD :\r\n      return activeCard;\r\n    default :\r\n      return state\r\n  }\r\n};\r\n\r\nexport default activeCard;","import {SELECTED_CARD, SELECTED_CARD_CLEAR} from \"../../constants\";\r\n\r\n\r\nconst selectedCards = (state = [], {card, type}) => {\r\n  switch (type) {\r\n    case SELECTED_CARD :\r\n      return [...state,card];\r\n    case SELECTED_CARD_CLEAR:\r\n      return [];\r\n    default :\r\n      return state\r\n  }\r\n};\r\n\r\nexport default selectedCards;","import {SEARCH} from \"../../constants\";\r\n\r\nconst search = (state='', {value, type}) => {\r\n  switch(type) {\r\n    case SEARCH :\r\n      return value;\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default search;","import {POPUP_ERROR} from \"../../constants\";\r\n\r\nconst popupError = (state=false, {text, type}) => {\r\n  switch(type) {\r\n    case POPUP_ERROR :\r\n      return text;\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default popupError;","import {FULL_DECK} from \"../../constants\";\r\n\r\n\r\nconst fullDeck = (state = false, {bool, type}) => {\r\n  switch (type) {\r\n    case FULL_DECK :\r\n      return bool;\r\n    default :\r\n      return state\r\n  }\r\n};\r\n\r\nexport default fullDeck;","import {combineReducers} from 'redux'\r\nimport data from \"./data\";\r\nimport preloader from \"./preloader\";\r\nimport filter from \"./filter\";\r\nimport activeCard from \"./activeCard\";\r\nimport selectedCards from \"./selectedCards\";\r\nimport search from \"./search\";\r\nimport popupError from \"./popupError\";\r\nimport fullDeck from \"./fullDeck\";\r\n\r\nexport default combineReducers({\r\n  data,\r\n  preloader,\r\n  filter,\r\n  activeCard,\r\n  selectedCards,\r\n  search,\r\n  popupError,\r\n  fullDeck\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport configureStore from './configureStore'\n\n//-----STYLE-----//\nimport './style/settings.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n\n  , document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './redux/Reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n    const composeEnhancers =\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n                // options like actionSanitizer, stateSanitizer\r\n            }) : compose;\r\n\r\n    // Local\r\n    // const enhancer = composeEnhancers(\r\n    //     applyMiddleware(thunk)\r\n    // );\r\n\r\n    //Prod\r\n    const enhancer = applyMiddleware(thunk);\r\n\r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        enhancer\r\n    );\r\n}"],"sourceRoot":""}